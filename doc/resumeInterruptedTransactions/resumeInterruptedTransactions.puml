@startuml
'https://plantuml.com/sequence-diagram
!pragma teoz true
participant csms order 10
participant libocpp order 20
participant core order 30
actor user order 40 
autonumber "<b><font color=red>"
skinparam sequenceArrowThickness 2

== Start a transaction ==
user->core: swipe ID tag
user->core: plug in cable
core->libocpp: Authorize
libocpp->core:Authorized
core->libocpp: on_transaction_started()
libocpp->libocpp: insert transaction details into database
libocpp->csms: TransactionEventRequest::Started
libocpp->csms: (Optional) TransactionEventRequest::Updated

== System Failure / Power Outage ==
core->core: Booting process
libocpp->libocpp: Initialize library/ restore transaction values from database
alt TransactionInteruptedResponse.has_interrupted_transaction = true
core->core: Restore authorization
libocpp->libocpp: resume_interrupted_transactions()
libocpp->csms: (optional) TransactionEventRequest::Updated
... Do stuff ...
core->libocpp: (optional) has_interrupted_transactions(connector_id)
libocpp->core: transaction_id (empty string or valid)
... Do stuff ...
core->libocpp: on_transaction_finished()
libocpp->libocpp: clear_transaction in database (transaction_id)
libocpp->csms: TransactionEventRequest::Ended

else TransactionInteruptedResponse.has_interrupted_transaction = false
note over core: continue normal operations



@enduml